services:
  mongo:
    image: mongo:7
    container_name: petcare-mongo-multi
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
      MONGO_INITDB_DATABASE: petcare
    volumes:
      - mongo_multi_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  petcare-api-1:
    build:
      context: ./app-petcare
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      PORT: 3000
      INSTANCE: petcare-api-1
      MONGODB_URI: mongodb://mongo:27017/petcare
      MONGODB_USER: petcare_app
      MONGODB_PASS: petcare_pass
      MONGODB_DB_NAME: petcare
      MONGODB_AUTH_SOURCE: petcare

  petcare-api-2:
    build:
      context: ./app-petcare
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      PORT: 3000
      INSTANCE: petcare-api-2
      MONGODB_URI: mongodb://mongo:27017/petcare
      MONGODB_USER: petcare_app
      MONGODB_PASS: petcare_pass
      MONGODB_DB_NAME: petcare
      MONGODB_AUTH_SOURCE: petcare

  petcare-api-3:
    build:
      context: ./app-petcare
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      PORT: 3000
      INSTANCE: petcare-api-3
      MONGODB_URI: mongodb://mongo:27017/petcare
      MONGODB_USER: petcare_app
      MONGODB_PASS: petcare_pass
      MONGODB_DB_NAME: petcare
      MONGODB_AUTH_SOURCE: petcare

  nginx:
    image: nginx:1.25
    container_name: petcare-nginx
    depends_on:
      - petcare-api-1
      - petcare-api-2
      - petcare-api-3
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  mongo_multi_data:
